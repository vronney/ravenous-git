{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","registerServiceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","href","url","target","rel","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sortByOptions","Best Match","Highest Rated","Most Reviewed","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","onClick","handleSortByChange","getSortByClass","setState","event","value","searchYelp","preventDefault","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.09294d78.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"Business\">\r\n                <div className = \"image-container\">\r\n                    < img src = {this.props.business.imageSrc} alt = ''/>\r\n                </div>\r\n                <h2><a className=\"business-links\" href={this.props.business.url} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.business.name}</a></h2>\r\n                <div className = \"Business-information\">\r\n                    <div className = \"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className = \"Business-reviews\">\r\n                        <h3>{this.props.business.category.toUpperCase()}</h3>\r\n                        <h3 className = \"rating\">{this.props.business.rating} Stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )            \r\n    }\r\n}\r\n\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"BusinessList\">\r\n                {\r\n                    this.props.businesses.map(business => {\r\n                        return <Business key={business.id} business={business} />\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'                \r\n        };\r\n        \r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    sortByOptions = {\r\n        \"Best Match\": \"best_match\",\r\n        \"Highest Rated\": \"rating\",\r\n        \"Most Reviewed\": \"review_count\"\r\n    };\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n               let sortByOptionValue = this.sortByOptions[sortByOption];\r\n              return <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n        });\r\n    }\r\n    getSortByClass(sortByOption) {\r\n        if (this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({\r\n            sortBy: sortByOption \r\n        })\r\n    }\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value                \r\n        })\r\n    }\r\n    handleLocationChange(event) {\r\n        this.setState({\r\n            location: event.target.value\r\n        })            \r\n    }\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div className=\"SearchBar\">\r\n            <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                    {this.renderSortByOptions()}\r\n                </ul>\r\n            </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n                </div>\r\n                <div className = \"SearchBar-submit\">\r\n                    {/* eslint-disable-next-line */}\r\n                    <a onClick = {this.handleSearch}> Let's Go</a>\r\n                </div>\r\n          </div>\r\n      )  \r\n    }\r\n};\r\n\r\nexport default SearchBar;\r\n","const apiKey = 'qkngjNASySDRtKdy9w3CZI9BizsvxAStskPZGW406ZHJn2zDN6JFhNVTU8srnGyRJ1Hg3PFaMWhU6Rz5Ohu8Cm27VB8TB6U4y-ATtlElx-66cAQQLtDXY2d_JP3VW3Yx';\r\n\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${apiKey}`\r\n                }\r\n         }).then(response => {\r\n            return response.json();\r\n         }).then(jsonResponse => {\r\n            if (jsonResponse.businesses) {\r\n                console.log(jsonResponse.businesses);\r\n                return jsonResponse.businesses.map(business => {\r\n                    return {\r\n                    id: business.id,\r\n                    url: business.url,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.location.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.review_count\r\n                    }\r\n                });  \r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList.js';\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport Yelp from './util/Yelp.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}